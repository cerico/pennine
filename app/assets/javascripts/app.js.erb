scenic = angular.module('scenic',['controllers','templates','ui.router','uiGmapgoogle-maps','ngAnimate'])

controllers = angular.module('controllers',[])

scenic.factory('Auth',function() { 
  if (typeof current_user !== 'undefined'){
    return { 
      isLoggedIn : true
    }; 
  }else{
    return { 
      isLoggedIn : false
    }; 
  }
})


    scenic.factory('glossop', ['$http','$location', function($http,$location) {

    var urlBase = $location.path() + '.json';
    var glossop = {};

    glossop.getUser = function () {
        return $http.get(urlBase);
    };

    // glossop.getUser = function (id) {
    //     return $http.get(urlBase + '/' + id);
    // };

    // glossop.insertUser = function (cust) {
    //     return $http.post(urlBase, cust);
    // };

    // glossop.updateUser = function (cust) {
    //     return $http.put(urlBase + '/' + cust.ID, cust)
    // };

    // glossop.deleteUser = function (id) {
    //     return $http.delete(urlBase + '/' + id);
    // };

    

    return glossop;
}]);



scenic.config(['$stateProvider','$urlRouterProvider','$locationProvider','uiGmapGoogleMapApiProvider','$httpProvider', '$animateProvider', function ($stateProvider, $urlRouterProvider, $locationProvider, uiGmapGoogleMapApiProvider,$httpProvider, $animateProvider){
  
  $animateProvider.classNameFilter(/angular-animate/);

  uiGmapGoogleMapApiProvider.configure({

    key: 'AIzaSyC3QZszFRix7NN1EFAe_YOxScY5J6AY99U',
    v: '3.17',
    libraries: 'weather,geometry,visualization,places'
  });

  $httpProvider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content')


  $urlRouterProvider.otherwise('/trails')


  $stateProvider.state('trails', { 
    url: '/trails',
    templateUrl: 'trailsindex.html',
    controller: 'TrailsIndexController'
  }),
  $stateProvider.state('trail', {
    url: '/trails/:id',
    templateUrl: 'trail.html',
    controller: 'TrailsController'
  }),
  $stateProvider.state('profile', {
    url: '/users/:id',
    templateUrl: 'profile.html',
    controller: 'ProfileController'
  }),
  $stateProvider.state('new', {
    url: '/new',
    templateUrl: 'new.html',
    controller: 'NewController',
    data : {requireLogin : true },
  }),
  $stateProvider.state('map', {
    url: '/map',
    templateUrl: 'map.html',
    controller: 'MapController'
  });
  $stateProvider.state('login', {
    url: '/login',
    templateUrl: 'login.html',
    controller: 'LoginController'
  }),
    $stateProvider.state('blah', {
    url: '/blah',
    templateUrl: 'blah.html',
    // controller: 'LoginController'
  });


}])

// scenic.directive('helloworld', function() {
//   return {
//       restrict: 'AE',
//       replace: 'true',
//       templateUrl: 'jelloworld.html'
//   };
// });

scenic.directive('mainphoto', function() {
    return {
        restrict: 'A',
        templateUrl: 'mainphoto.html',
    };
});
scenic.directive('helloworld', function($http) {
    return {
        restrict: 'A',
        templateUrl: 'helloworld.html',
        link: function(scope, element, attrs) {
            $http.get('trails.json').success(function(data) {
                scope.data = data;
            });
        }
    };
});

scenic.run(['$rootScope','$state','$location','Auth', function ($rootScope, $state, $location, Auth) {

  $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState) {
  
    console.log(toState.name)
    if (toState.name === 'login'){
      $(".header").css("visibility","hidden")
    }else {
      $(".header").css("visibility","visible")
    }
   

    var shouldLogin = toState.data !== undefined
    && toState.data.requireLogin 
    && !Auth.isLoggedIn ;

    if(shouldLogin) {
      $state.go('login');
      event.preventDefault();
      return;
    }


  });
}])
