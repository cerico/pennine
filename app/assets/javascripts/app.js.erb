scenic = angular.module('scenic',['controllers','templates','ui.router','uiGmapgoogle-maps'])

controllers = angular.module('controllers',[])

scenic.factory('Auth',function() { 
  // return "helool"
  return { 
    isLoggedIn : false
  }; 
})

scenic.config(['$stateProvider','$urlRouterProvider','$locationProvider','uiGmapGoogleMapApiProvider','$httpProvider', function ($stateProvider, $urlRouterProvider, $locationProvider, uiGmapGoogleMapApiProvider,provider){


      uiGmapGoogleMapApiProvider.configure({
         
          key: 'AIzaSyC3QZszFRix7NN1EFAe_YOxScY5J6AY99U',
          v: '3.17',
          libraries: 'weather,geometry,visualization,places'
      });

  provider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content')


  $urlRouterProvider.otherwise('/trails')


  $stateProvider.state('trails', { 
      url: '/trails',
      templateUrl: 'trailsindex.html',
      controller: 'TrailsIndexController'
  }),
  $stateProvider.state('trail', {
      url: '/trails/:id',
      templateUrl: 'trail.html',
      controller: 'TrailsController'
  }),
  $stateProvider.state('profile', {
      url: '/users/:id',
      templateUrl: 'profile.html',
      controller: 'ProfileController'
  }),
  $stateProvider.state('new', {
      url: '/new',
      templateUrl: 'new.html',
      controller: 'NewController'
  }),
  $stateProvider.state('map', {
      url: '/map',
      templateUrl: 'map.html',
      controller: 'MapController'
  });
  $stateProvider.state('login', {
      url: '/login',
      templateUrl: 'login.html',
      controller: 'LoginController'
  });


    }])





// scenic.run(function ($rootScope, $state, $location, Auth) {
  
//     $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState) {
      
//       var shouldLogin = toState.data !== undefined
//                     && toState.data.requireLogin 
//                     && !Auth.isLoggedIn ;
      
//       // NOT authenticated - wants any private stuff
//       if(shouldLogin)
//       {
//         $state.go('login');
//         event.preventDefault();
//         return;
//       }
      
      
//       // authenticated (previously) comming not to root main
//       if(Auth.isLoggedIn) 
//       {
//         var shouldGoToMain = fromState.name === ""
//                           && toState.name !== "main" ;
          
//         if (shouldGoToMain)
//         {
//             $state.go('main');
//             event.preventDefault();
//         } 
//         return;
//       }
      
//       // UNauthenticated (previously) comming not to root public 
//       var shouldGoToPublic = fromState.name === ""
//                         && toState.name !== "public"
//                         && toState.name !== "login" ;
        
//       if(shouldGoToPublic)
//       {
//           $state.go('public');console.log('p')
//           event.preventDefault();
//       } 
      
//       // unmanaged
//     });
// });
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    