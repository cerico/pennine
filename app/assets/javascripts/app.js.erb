scenic = angular.module('scenic',['controllers','templates','ui.router','uiGmapgoogle-maps'])

controllers = angular.module('controllers',[])

scenic.factory('Auth',function() { 
  if (typeof current_user !== 'undefined'){
    return { 
      isLoggedIn : true
    }; 
  }else{
    return { 
      isLoggedIn : false
    }; 
  }
})

scenic.factory('httpInterceptor', function ($q, $rootScope, $log) {

    var numLoadings = 0;

    return {
        request: function (config) {
console.log(config.data)
            numLoadings++;


            // Show loader
            $rootScope.$broadcast("loader_show");
            return config || $q.when(config)

        },
        response: function (response) {
console.log(response.data.distance)
            if (response.data.id ) {
              console.log("im an object")
                // Hide loader
                $rootScope.$broadcast("loader_hide");
            }
console.log(response)
console.log($q.when(response))
            return response || $q.when(response);


        },
        responseError: function (response) {

            if (!(--numLoadings)) {
                // Hide loader
                $rootScope.$broadcast("loader_hide");
            }

            return $q.reject(response);
        }
    };
})



scenic.config(['$stateProvider','$urlRouterProvider','$locationProvider','uiGmapGoogleMapApiProvider','$httpProvider', function ($stateProvider, $urlRouterProvider, $locationProvider, uiGmapGoogleMapApiProvider,$httpProvider){
  
  $httpProvider.interceptors.push('httpInterceptor');

  uiGmapGoogleMapApiProvider.configure({

    key: 'AIzaSyC3QZszFRix7NN1EFAe_YOxScY5J6AY99U',
    v: '3.17',
    libraries: 'weather,geometry,visualization,places'
  });

  $httpProvider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content')


  $urlRouterProvider.otherwise('/trails')


  $stateProvider.state('trails', { 
    url: '/trails',
    templateUrl: 'trailsindex.html',
    controller: 'TrailsIndexController'
  }),
  $stateProvider.state('trail', {
    url: '/trails/:id',
    templateUrl: 'trail.html',
    controller: 'TrailsController'
  }),
  $stateProvider.state('profile', {
    url: '/users/:id',
    templateUrl: 'profile.html',
    controller: 'ProfileController'
  }),
  $stateProvider.state('new', {
    url: '/new',
    templateUrl: 'new.html',
    controller: 'NewController',
    data : {requireLogin : true },
  }),
  $stateProvider.state('map', {
    url: '/map',
    templateUrl: 'map.html',
    controller: 'MapController'
  });
  $stateProvider.state('login', {
    url: '/login',
    templateUrl: 'login.html',
    controller: 'LoginController'
  }),
    $stateProvider.state('blah', {
    url: '/blah',
    templateUrl: 'blah.html',
    // controller: 'LoginController'
  });


}])



scenic.run(['$rootScope','$state','$location','Auth', function ($rootScope, $state, $location, Auth) {

  $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState) {

    var shouldLogin = toState.data !== undefined
    && toState.data.requireLogin 
    && !Auth.isLoggedIn ;

    if(shouldLogin) {
      $state.go('login');
      event.preventDefault();
      return;
    }
  });
}])

scenic.directive("loader", function ($rootScope) {
 
    return function ($scope, element, attrs) {
        $scope.$on("loader_show", function () {
          console.log(element)
            // return element.show();
                    console.log(element)
        });
        return $scope.$on("loader_hide", function () {
                  console.log(element)
            return element.hide();
                    console.log(element)
        });
    };
})















