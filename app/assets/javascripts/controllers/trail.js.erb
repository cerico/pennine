scenic.controller("TrailsController", ['$scope','$location','$http','uiGmapGoogleMapApi','Auth','$anchorScroll', function($scope,$location,$http,uiGmapGoogleMapApi,Auth,$anchorScroll) {
  $scope.loading = true;
    $scope.administrating = false

   $scope.scrollTo = function(id) {
    $location.hash(id);
    $anchorScroll();
  }

count = 0

  $scope.auth = Auth
  $("#map_canvas.angular-google-map-container").css("height", "400px");

  $(".angular-google-map-container").css("margin-left", "1px");
  $scope.favstate = "notfaved"
  $scope.compstate = "notcompleted"
  $scope.posthere = $location.path() + '/photos'
  $scope.postgpx = $location.path() + '/points.json'
  Dropzone.autoDiscover = false;  

  $(document).ready(function() {
    $(".fancybox").fancybox();
  });
  

  $('.image').fancybox({
    padding: 0,
    helpers: {
      overlay: {
        locked: false
      }
    }
  });
  



  $scope.averating = function (f){
 
    total = 0
    raters = 0
       if (f) {
    total += f
    raters += 1
    }
    for (var i= 0; i< $scope.trail.bookmarks.length; i++){
      if ($scope.trail.bookmarks[i].rating > 0) {
        total += $scope.trail.bookmarks[i].rating
        raters += 1
      }
      if (raters >0 ){
        $scope.trailrating = (total/raters).toFixed(2)
        $scope.ratedby = '(' + raters + ')'
      }
    }
  }

  $scope.getTrailInfo = function (){
    $http.get($location.path() + '.json').success (function (data){
      $scope.trail = data  
      console.log(data)

      if (data.hikerbookmark){
        $scope.changeStar(data.hikerbookmark.rating)
      } else {
        $scope.changeStar(0)
      }
      $scope.averating(); 
      $scope.checkHikerBookmark() 
      $scope.makeMap()
      console.log($scope.administrating)
   console.log($scope.trail.bookmarks)
      $scope.areYouTheOwner()

      if ($scope.trail.points.length > 1){
        $scope.ifgpx = true
      }
      if ($scope.auth.isLoggedIn){
  $scope.photoUpload()
}else {
  $(".dropzone").css("background", "none");
}
   
    })
  }


  $scope.makeMap = function() {
    uiGmapGoogleMapApi.then(function(maps) {
      $scope.map = { 

       center: { latitude:$scope.trail.lat, longitude: $scope.trail.lng }, 
       zoom:13,
       polylineSteps: [], 
       Markers: [({
        latitude: $scope.trail.lat,
        longitude: $scope.trail.lng,
        id: 1,
        draggable:true
      })],
                   events: {
               
        click: function (model, event, params) {   
 if ($scope.administrating){
  count = 0
          console.log($scope.map.Markers)
          var marker = {
            latitude: params[0].latLng.lat(),
            longitude: params[0].latLng.lng(),
            id: count += 1
          }
          
          $scope.lat = params[0].latLng.lat();
          $scope.lng = params[0].latLng.lng();
            //scope apply required because this event handler is outside of the angular domain
          
              $scope.map.Markers.splice(0, $scope.map.Markers.length);
               $scope.$apply();
            $scope.map.Markers.push(marker)
          
           
 console.log($scope.map.Markers)
          }
          }
        },

     };

     var bounds = new maps.LatLngBounds()

     for (var i=0;i<$scope.trail.points.length;i++){

      var latlng = new maps.LatLng($scope.trail.points[i].latitude,$scope.trail.points[i].longitude)
      $scope.map.polylineSteps.push({latitude:$scope.trail.points[i].latitude,longitude:$scope.trail.points[i].longitude}) 
      bounds.extend(latlng);


    }

    $scope.map.visible = true
    console.log($scope.trail.photos)
    $scope.loading = false;
    $scope.whenready = true

    
    if ($scope.trail.points.length > 1){
      var deregister = $scope.$watch('map.getGMap', function (getGMap) {     
        if (getGMap) {
          deregister();
          google.maps.event.addListenerOnce(getGMap(), 'tilesloaded', function () {      
           getGMap().fitBounds(bounds)
         });

        }
      });
    }


  });





}

$scope.getTrailInfo()








$scope.photoUpload = function (){
console.log($scope.trail.photos.length)
  Dropzone.options.photoDropzone = new Dropzone("#media-dropzone", {
    url: $scope.posthere,
    headers: {
      "X-CSRF-Token" : $('meta[name="csrf-token"]').attr('content')
    },
    dictDefaultMessage:"",
  } );



  return Dropzone.options.photoDropzone.on("success", function(file, theNewPhoto) {
    $scope.trail.photos.push(file, theNewPhoto)
console.log($scope.trail.photos.length)
    // $http.get($location.path() + '/photos.json').success (function (data){
      Dropzone.options.photoDropzone.removeAllFiles();
    // });
  })
}


$scope.checkHikerBookmark = function (){

  if  ($scope.trail.hikerbookmark) {
    if ($scope.trail.hikerbookmark.favourited == true) {
      $scope.favstate = "faved"
    }
    else {
      $scope.favstate = "notfaved"
    }
    if ($scope.trail.hikerbookmark.completed == true) {
      $scope.compstate = "completed"
    }
    else {
      $scope.compstate = "notcompleted"
    }
  }
  else{
    $scope.favstate = "notfaved"
    $scope.compstate = "notcompleted"
  }

} 

$scope.addFav = function (f){
  count += 1
  if (typeof $scope.tempBookmark !== "undefined") {
    $scope.trail.hikerbookmark = $scope.tempBookmark
  }
  if ($scope.trail.hikerbookmark){
    $scope.tempBookmark = $scope.trail.hikerbookmark
  } else {
   $scope.tempBookmark  = {}
   $scope.tempBookmark.completed = false
   $scope.tempBookmark.favourited = false
  }

  var letsBookmark = {}
  letsBookmark.trail_id = $scope.trail.id
  letsBookmark.user_id = $scope.trail.hiker.id


  if (f == 'favit') {
    modit = {favourited: true, completed:$scope.tempBookmark.completed}
    letsBookmark.favourited = true
    letsBookmark.completed = $scope.tempBookmark.completed

  }else if (f == 'unfavit') {
    modit = {favourited: false, completed:$scope.tempBookmark.completed}
    letsBookmark.favourited = false
    letsBookmark.completed = $scope.tempBookmark.completed

  }else if (f == 'doneit') {
    modit = {completed: true, favourited:$scope.tempBookmark.favourited}
    letsBookmark.completed = true
    letsBookmark.favourited = $scope.tempBookmark.favourited

  }else if (f == 'undoneit') {
    modit = {completed: false, favourited:$scope.tempBookmark.favourited}
    letsBookmark.completed = false
    letsBookmark.favourited = $scope.tempBookmark.favourited

  }

  if ($scope.trail.hikerbookmark) {  
    $http.put('/bookmarks/' + $scope.trail.hikerbookmark.id + '.json', modit).success (function (data){
    $scope.tempBookmark = letsBookmark
    if (count > 1){
      $scope.trail.bookmarks.pop();
    }else{
      $scope.tempBookmark.id = $scope.trail.hikerbookmark.id 
      var index = $scope.trail.bookmarks.indexOf(data)
      $scope.trail.bookmarks.splice(index,1)
    }
    $scope.tempBookmark.id = $scope.trail.hikerbookmark.id 
    $scope.trail.bookmarks.push(letsBookmark)
    $scope.changeBookmark(f)
    });
  }else{      
    $http.post('/bookmarks.json', {bookmark: letsBookmark}).success (function (data){
      $scope.tempBookmark = letsBookmark
      $scope.tempBookmark.id = data.id
    if (count > 1){
      $scope.trail.bookmarks.pop();
    }
    $scope.tempBookmark.id = data.id
    $scope.trail.bookmarks.push(letsBookmark)
    $scope.changeBookmark(f)
    })
  } 
}

$scope.rateTrail = function(f){
  var letsRate = {}
  letsRate.trail_id = $scope.trail.id
  letsRate.user_id = $scope.trail.hiker.id
  letsRate.rating = f
  if ($scope.trail.hikerbookmark) {         
   $http.put('/bookmarks/' + $scope.trail.hikerbookmark.id + '.json', {rating: f}).success (function (data){

    $scope.changeStar(f)
    $scope.averating(f)

  });
 }else{      
  $http.post('/bookmarks.json', {bookmark: letsRate}).success (function (data){

    $scope.changeStar(f)
       $scope.changeStar(f)
    $scope.averating(f)

  })

} 

}

$scope.changeBookmark = function(f){
  if (f === 'favit'){
    $scope.favstate = 'faved'
  }
  else if (f === 'unfavit') {
    $scope.favstate = 'notfaved'
  }
  else if (f === 'doneit'){
    $scope.compstate = 'completed'
  }
  else if (f === 'undoneit'){
    $scope.compstate = 'notcompleted'
  }
}

$scope.changeStar = function(f) {
  $scope.stars = []
  for (var i=0;i<5;i++){
    $scope.stars.push({grey:i >= f, index:i+1});
  }
}

$scope.areYouTheOwner = function(){
    if (typeof current_user != "undefined"){
        $scope.current_user = current_user
  if ($scope.trail.user_id === current_user.id){
    $scope.administrateview("finish")
    $scope.trailowner = true
  }
}
}



$scope.administrateview = function(admin){
  if (admin === "start"){
    $scope.deletePic = true
    $scope.deleteGPX = true
    $scope.makeFirstPic = true
    $scope.editName = true
    $scope.changeLoc = true
    $scope.administrating = true
    $scope.trailowner = false
    
  }else if (admin === "finish"){
    $scope.deletePic = false
    $scope.deleteGPX = false
    $scope.makeFirstPic = false
    $scope.editName = false
    $scope.changeLoc = false
    $scope.administrating = false
    $scope.trailowner = true
        $scope.deletingMainPic = false
  }
}



$scope.deletePhoto = function (photo){
  $http.delete('/photos/' + photo.id + '.json').success (function (){
    var index = $scope.trail.photos.indexOf(photo)
    $scope.trail.photos.splice( index, 1 );
  }).error (function(){
    alert("Can't delete main trail photo!")

  })
}

$scope.makeMain = function (photo){


  $http.put('/photos/' + photo.id + '.json', {trailid:photo.trail_id}).success (function(){
    console.log(photo)
    $scope.trail.mainphoto = photo

})

}
$scope.editname  = function(){
  console.log($scope.newtrailname)
    var newtrailname = {}
  newtrailname.name = $scope.newtrailname


  $http.put($location.path() + '.json', newtrailname).success (function(){
  $scope.trail.name = $scope.newtrailname
})
}

$scope.deletegpx = function(){
  alert("coming soon")
}

$scope.editmap = function(){
  console.log($scope.map.Markers)
  var newloc = {}
  newloc.lat = $scope.map.Markers[0].latitude
  newloc.lng = $scope.map.Markers[0].longitude
  $http.put($location.path() + '.json', newloc).success (function(){
    console.log(newloc)
  })
}




}])